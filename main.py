# @title Main code
# main.py

import os
import tensorflow as tf
from discord.ext import commands
import discord
import toml

# Load bot token from configs.toml
with open('./configs.toml', 'r') as f:
    configs = f.read()

config = toml.loads(configs)
Token = config['bot-Token']['Token']

# Load the saved model
try:
    model = tf.keras.models.load_model('gpt_mini.h5')  # Corrected file name
    print("Model loaded successfully.")
except Exception as e:
    print("Error loading model:", e)

# Function to make predictions
def predict_digit(image):
    # Preprocess the image if necessary
    # Perform prediction
    prediction = model.predict(image)
    return prediction

# Initialize Discord bot with intents
intents = discord.Intents.default()
intents.messages = True  # Enable message events
intents.guilds = True    # Enable guild events
bot = commands.Bot(command_prefix='!', intents=intents)

# Event handler for when the bot is ready
@bot.event
async def on_ready():
    print(f'{bot.user} has connected to Discord!')

# Event handler for processing messages
@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    # Process user message and generate bot response using your trained model
    response = generate_response(message.content)

    # Send response back to the user
    await message.channel.send(response)

# Function to generate response using your trained model
# Function to generate response using your trained model
def generate_response(user_input):
    def preprocess_input(text):
      # Perform any necessary preprocessing on the input text
      # For example, tokenization, lowercasing, etc.
      processed_text = text.lower()  # Example: Convert text to lowercase
      return processed_text
    processed_input = preprocess_input(user_input)
    # Use the processed input to generate a response
    response = "This is the response generated by the AI model."
    return response


if __name__ == "__main__":
    # Run the bot with the provided token
    bot.run(Token)
